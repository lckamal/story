// Generated by CoffeeScript 1.6.3
(function() {
  var $, Sluggable, dispatcher, root, slug, title;

  root = this;

  $ = this.jQuery;

  dispatcher = this.Javie.make('event');

  title = $('#title');

  Sluggable = (function() {
    Sluggable.prototype.element = null;

    function Sluggable(element) {
      this.element = element;
    }

    Sluggable.prototype.data = function(key, value) {
      return this.element.data(key, value);
    };

    Sluggable.prototype.listen = function() {
      return this.element.data('listen');
    };

    Sluggable.prototype.val = function(str) {
      return this.element.val(str);
    };

    Sluggable.prototype.generate = function(str) {
      if (typeof str === 'undefined') {
        return '';
      }
      return str.toLowerCase().replace('/^(_post_\/|_page_\/)/g', '').replace('/[^\w\.]+/g', '-').replace('/ +/g', '-');
    };

    Sluggable.prototype.handler = function(str, update) {
      str = this.generate(str);
      if (update == null) {
        update = false;
      }
      if (this.listen() === true && update) {
        this.val(str);
      }
      return null;
    };

    return Sluggable;

  })();

  slug = new Sluggable($('input[role="slug-editor"]:first'));

  dispatcher.listen('storycms.update: slug', slug.handler);

  if (slug.val() === '') {
    slug.data('listen', true);
    dispatcher.fire('storycms.update: slug', [title.val(), true]);
  } else {
    slug.data('listen', false);
    dispatcher.fire('storycms.update: slug', [slug.val(), true]);
  }

  title.on('keyup', function() {
    dispatcher.fire('storycms.update: slug', [title.val()]);
    return null;
  });

  slug.on('blur', function() {
    dispatcher.fire('storycms.update: slug', [slug.val(), true]);
    return null;
  });

}).call(this);
